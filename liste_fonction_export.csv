FunctionName;Type;DefinedIn;ExportedIn;UsageFile;UsageLineNumber;UsageLineContent
getPlayerElement;function;app\static\js\camera_main_logic.js;;app\static\js\camera_main_logic.js;12;function getPlayerElement() {
getPlayerElement;function;app\static\js\camera_main_logic.js;;app\static\js\camera_main_logic.js;26;"const player = getPlayerElement();"
getMapInnerElement;function;app\static\js\camera_main_logic.js;app\static\js\camera_main_logic.js;app\static\js\camera_main_logic.js;16;export function getMapInnerElement() {
getMapInnerElement;function;app\static\js\camera_main_logic.js;app\static\js\camera_main_logic.js;app\static\js\camera_main_logic.js;35;"const mapInner = getMapInnerElement();"
getMapContainerElement;function;app\static\js\camera_main_logic.js;app\static\js\camera_main_logic.js;app\static\js\camera_main_logic.js;20;export function getMapContainerElement() {
getMapContainerElement;function;app\static\js\camera_main_logic.js;app\static\js\camera_main_logic.js;app\static\js\camera_main_logic.js;36;"const mapContainer = getMapContainerElement();"
movePlayer;function;app\static\js\camera_main_logic.js;app\static\js\camera_main_logic.js;app\static\js\camera_main_logic.js;25;export function movePlayer() {
movePlayer;function;app\static\js\camera_main_logic.js;app\static\js\camera_main_logic.js;app\static\js\map_main_logic.js;211;"// movePlayer();"
resizeMapContainer;function;app\static\js\camera_main_logic.js;app\static\js\camera_main_logic.js;app\static\js\camera_main_logic.js;50;export function resizeMapContainer() {
set_deplacement_sans_rencontre;function;app\static\js\combat_manager_logic.js;app\static\js\combat_manager_logic.js;app\static\js\combat_manager_logic.js;51;function set_deplacement_sans_rencontre(val) {
set_deplacement_sans_rencontre;function;app\static\js\combat_manager_logic.js;app\static\js\combat_manager_logic.js;app\static\js\main_entry_point.js;112;"set_deplacement_sans_rencontre(window.DEP_SANS_RENCONTRE);"
get_deplacement_sans_rencontre;function;app\static\js\combat_manager_logic.js;app\static\js\combat_manager_logic.js;app\static\js\combat_manager_logic.js;58;function get_deplacement_sans_rencontre() {
reset_deplacement_sans_rencontre;function;app\static\js\combat_manager_logic.js;app\static\js\combat_manager_logic.js;app\static\js\combat_manager_logic.js;62;function reset_deplacement_sans_rencontre() {
reset_deplacement_sans_rencontre;function;app\static\js\combat_manager_logic.js;app\static\js\combat_manager_logic.js;app\static\js\main_entry_point.js;79;"reset_deplacement_sans_rencontre();"
creer_monstre_et_demarrer_combat;function;app\static\js\combat_manager_logic.js;app\static\js\combat_manager_logic.js;app\static\js\combat_manager_logic.js;68;function creer_monstre_et_demarrer_combat(monstre, pv, x, y) {
creer_monstre_et_demarrer_combat;function;app\static\js\combat_manager_logic.js;app\static\js\combat_manager_logic.js;app\static\js\combat_manager_logic.js;224;"const monstre_obj = creer_monstre_et_demarrer_combat(monstre, pv, spawn_x, spawn_y);"
demarrer_combat;function;app\static\js\combat_manager_logic.js;app\static\js\combat_manager_logic.js;app\static\js\combat_manager_logic.js;84;"demarrer_combat(monstre_obj);"
demarrer_combat;function;app\static\js\combat_manager_logic.js;app\static\js\combat_manager_logic.js;app\static\js\combat_manager_logic.js;90;function demarrer_combat(monstre) {
demarrer_combat;function;app\static\js\combat_manager_logic.js;app\static\js\combat_manager_logic.js;app\static\js\combat_manager_logic.js;303;"demarrer_combat(monstre);"
demarrer_combat;function;app\static\js\combat_manager_logic.js;app\static\js\combat_manager_logic.js;app\static\js\input_handler_logic.js;52;"demarrer_combat(monstreData, monstreData.pv, monstreX, monstreY);"
demarrer_combat;function;app\static\js\combat_manager_logic.js;app\static\js\combat_manager_logic.js;app\static\js\monstre_main_logic.js;97;"// demarrer_combat(monstre_actif);"
demarrer_combat;function;app\static\js\combat_manager_logic.js;app\static\js\combat_manager_logic.js;app\static\js\monstre_main_logic.js;218;"// demarrer_combat(monstre);"
finir_combat;function;app\static\js\combat_manager_logic.js;app\static\js\combat_manager_logic.js;app\static\js\combat_manager_logic.js;110;function finir_combat() {
finir_combat;function;app\static\js\combat_manager_logic.js;app\static\js\combat_manager_logic.js;app\static\js\combat_manager_logic.js;145;"finir_combat();"
finir_combat;function;app\static\js\combat_manager_logic.js;app\static\js\combat_manager_logic.js;app\static\js\combat_manager_logic.js;167;"finir_combat();"
finir_combat;function;app\static\js\combat_manager_logic.js;app\static\js\combat_manager_logic.js;app\static\js\monstre_main_logic.js;192;"// finir_combat();"
attaquer_joueur;function;app\static\js\combat_manager_logic.js;app\static\js\combat_manager_logic.js;app\static\js\combat_manager_logic.js;104;"attaquer_joueur(monstre);"
attaquer_joueur;function;app\static\js\combat_manager_logic.js;app\static\js\combat_manager_logic.js;app\static\js\combat_manager_logic.js;123;function attaquer_joueur(monstre) {
attaquer_monstre;function;app\static\js\combat_manager_logic.js;app\static\js\combat_manager_logic.js;app\static\js\combat_manager_logic.js;149;function attaquer_monstre(valeur) {
get_combat_actif;function;app\static\js\combat_manager_logic.js;app\static\js\combat_manager_logic.js;app\static\js\combat_manager_logic.js;172;function get_combat_actif() {
get_combat_actif;function;app\static\js\combat_manager_logic.js;app\static\js\combat_manager_logic.js;app\static\js\combat_manager_logic.js;182;"if (get_combat_actif()) return;"
get_current_monstre;function;app\static\js\combat_manager_logic.js;app\static\js\combat_manager_logic.js;app\static\js\combat_manager_logic.js;176;function get_current_monstre() {
verifier_rencontre;function;app\static\js\combat_manager_logic.js;app\static\js\combat_manager_logic.js;app\static\js\combat_manager_logic.js;181;function verifier_rencontre() {
verifier_rencontre;function;app\static\js\combat_manager_logic.js;app\static\js\combat_manager_logic.js;app\static\js\combat_manager_logic.js;238;"return verifier_rencontre();"
generer_rencontre;function;app\static\js\combat_manager_logic.js;app\static\js\combat_manager_logic.js;app\routes.py;186;monstre_id = generer_rencontre(x, y, carte)
generer_rencontre;function;app\static\js\combat_manager_logic.js;app\static\js\combat_manager_logic.js;app\utils.py;49;"def generer_rencontre(x, y, nom_carte=""map1""):"
generer_rencontre;function;app\static\js\combat_manager_logic.js;app\static\js\combat_manager_logic.js;app\static\js\combat_manager_logic.js;236;function generer_rencontre() {
detecter_sortie;function;app\static\js\combat_manager_logic.js;app\static\js\combat_manager_logic.js;app\static\js\combat_manager_logic.js;242;function detecter_sortie(exit_zones) {
verifier_combat_adj_monstre;function;app\static\js\combat_manager_logic.js;app\static\js\combat_manager_logic.js;app\static\js\combat_manager_logic.js;253;function verifier_combat_adj_monstre() {
set_combat;function;app\static\js\combat_manager_logic.js;;app\static\js\combat_manager_logic.js;312;function set_combat(actif) {
set_combat;function;app\static\js\combat_manager_logic.js;;app\static\js\player_state_logic.js;111;"modules.set_combat(false); // Force la fin du combat"
detectMonsters;function;app\static\js\input_handler_logic.js;app\static\js\input_handler_logic.js;app\static\js\input_handler_logic.js;20;function detectMonsters(currentX, currentY) {
detectMonsters;function;app\static\js\input_handler_logic.js;app\static\js\input_handler_logic.js;app\static\js\input_handler_logic.js;115;"const { monstreSurCase, monstreAdj, monsterElements } = detectMonsters(x, y);"
triggerCombatIfNeeded;function;app\static\js\input_handler_logic.js;;app\static\js\input_handler_logic.js;33;function triggerCombatIfNeeded(monstreSurCase, monstreAdj, monsterElements, currentX, currentY) {
triggerCombatIfNeeded;function;app\static\js\input_handler_logic.js;;app\static\js\input_handler_logic.js;117;"triggerCombatIfNeeded(monstreSurCase, monstreAdj, monsterElements, x, y);"
isMoveBlockedByMonster;function;app\static\js\input_handler_logic.js;;app\static\js\input_handler_logic.js;61;function isMoveBlockedByMonster(newX, newY) {
isMoveBlockedByMonster;function;app\static\js\input_handler_logic.js;;app\static\js\input_handler_logic.js;146;"const monstreSurCaseDeplacement = isMoveBlockedByMonster(newX, newY);"
utiliser_talent_en_combat;function;app\static\js\input_handler_logic.js;app\static\js\input_handler_logic.js;app\static\js\input_handler_logic.js;71;function utiliser_talent_en_combat(talent) {
utiliser_talent_en_combat;function;app\static\js\input_handler_logic.js;app\static\js\input_handler_logic.js;app\static\js\input_handler_logic.js;108;"utiliser_talent_en_combat(talent);"
utiliser_talent_en_combat;function;app\static\js\input_handler_logic.js;app\static\js\input_handler_logic.js;app\static\js\player_main_logic.js;175;"utiliser_talent_en_combat(talent);"
utiliser_talent_en_combat;function;app\static\js\input_handler_logic.js;app\static\js\input_handler_logic.js;app\static\js\player_talents_logic.js;102;"utiliser_talent_en_combat(talent);"
handleKeydown;function;app\static\js\input_handler_logic.js;app\static\js\input_handler_logic.js;app\static\js\input_handler_logic.js;94;function handleKeydown(e) {
showToast;function;app\static\js\main_entry_point.js;app\static\js\main_entry_point.js;app\static\js\main_entry_point.js;29;function showToast(message, color = '#333') {
showToast;function;app\static\js\main_entry_point.js;app\static\js\main_entry_point.js;app\static\js\main_entry_point.js;158;"showToast('Partie sauvegard√©e !', '#388e3c');"
showToast;function;app\static\js\main_entry_point.js;app\static\js\main_entry_point.js;app\static\js\main_entry_point.js;160;"showToast('Erreur lors de la sauvegarde.', '#c62828');"
showToast;function;app\static\js\main_entry_point.js;app\static\js\main_entry_point.js;app\static\js\main_entry_point.js;163;"showToast('Erreur r√©seau lors de la sauvegarde.', '#c62828');"
chargerTalentsEtDemarrerJeu;function;app\static\js\main_entry_point.js;app\static\js\main_entry_point.js;app\static\js\main_entry_point.js;62;function chargerTalentsEtDemarrerJeu() {
chargerTalentsEtDemarrerJeu;function;app\static\js\main_entry_point.js;app\static\js\main_entry_point.js;app\static\js\main_entry_point.js;184;"chargerTalentsEtDemarrerJeu();"
demarrerJeu;function;app\static\js\main_entry_point.js;app\static\js\main_entry_point.js;app\static\js\main_entry_point.js;70;"demarrerJeu();"
demarrerJeu;function;app\static\js\main_entry_point.js;app\static\js\main_entry_point.js;app\static\js\main_entry_point.js;78;function demarrerJeu() {
changeClass;function;app\static\js\main_entry_point.js;;app\static\js\main_entry_point.js;197;function changeClass(direction) {
changeClass;function;app\static\js\main_entry_point.js;;app\templates\menu.html;29;"<span class=""arrow"" onclick=""changeClass(-1)"">‚Øá</span>"
changeClass;function;app\static\js\main_entry_point.js;;app\templates\menu.html;32;"<span class=""arrow"" onclick=""changeClass(1)"">‚Øà</span>"
getVisibleTileCount;function;app\static\js\map_main_logic.js;app\static\js\map_main_logic.js;app\static\js\map_main_logic.js;26;function getVisibleTileCount() {
extraireCoordonneesCarte;function;app\static\js\map_main_logic.js;app\static\js\map_main_logic.js;app\static\js\map_main_logic.js;32;function extraireCoordonneesCarte(nom) {
extraireCoordonneesCarte;function;app\static\js\map_main_logic.js;app\static\js\map_main_logic.js;app\static\js\map_main_logic.js;49;"const { colonne, ligne } = extraireCoordonneesCarte(currentMap);"
getBlockedKey;function;app\static\js\map_main_logic.js;app\static\js\map_main_logic.js;app\static\js\map_main_logic.js;38;function getBlockedKey(x, y) {
getBlockedKey;function;app\static\js\map_main_logic.js;app\static\js\map_main_logic.js;app\static\js\map_main_logic.js;43;"return blockedTiles.has(getBlockedKey(x, y));"
getBlockedKey;function;app\static\js\map_main_logic.js;app\static\js\map_main_logic.js;app\static\js\map_main_logic.js;170;"blockedTiles.add(getBlockedKey(x, y));"
getBlockedKey;function;app\static\js\map_main_logic.js;app\static\js\map_main_logic.js;app\static\js\map_main_logic.js;242;"return blockedTiles.has(getBlockedKey(x, y));"
isBlocked;function;app\static\js\map_main_logic.js;app\static\js\map_main_logic.js;app\static\js\input_handler_logic.js;140;if (modules.isBlocked(newX, newY)) {
isBlocked;function;app\static\js\map_main_logic.js;app\static\js\map_main_logic.js;app\static\js\map_main_logic.js;42;function isBlocked(x, y) {
isBlocked;function;app\static\js\map_main_logic.js;app\static\js\map_main_logic.js;app\static\js\player_state_logic.js;123;if (check_blocked && isBlocked(x, y)) {
isBlocked;function;app\static\js\map_main_logic.js;app\static\js\map_main_logic.js;app\static\js\player_state_logic.js;130;if (!isBlocked(tryX, tryY)) {
isBlocked;function;app\static\js\map_main_logic.js;app\static\js\map_main_logic.js;app\static\js\player_talents_logic.js;181;if (!isBlocked(tryX, tryY) && !monstreSurCase) {
deplacementVersCarte;function;app\static\js\map_main_logic.js;app\static\js\map_main_logic.js;app\static\js\map_main_logic.js;47;function deplacementVersCarte(direction) {
charger_nouvelle_carte;function;app\static\js\map_main_logic.js;app\static\js\map_main_logic.js;app\static\js\main_entry_point.js;125;"charger_nouvelle_carte(saveData.carte, saveData.position.x, saveData.position.y);"
charger_nouvelle_carte;function;app\static\js\map_main_logic.js;app\static\js\map_main_logic.js;app\static\js\map_main_logic.js;86;"charger_nouvelle_carte(nouvelleCarte, spawnX, spawnY);"
charger_nouvelle_carte;function;app\static\js\map_main_logic.js;app\static\js\map_main_logic.js;app\static\js\map_main_logic.js;91;function charger_nouvelle_carte(nomCarte, spawnX = null, spawnY = null) {
charger_nouvelle_carte;function;app\static\js\map_main_logic.js;app\static\js\map_main_logic.js;app\static\js\map_main_logic.js;235;"return charger_nouvelle_carte(""A1""); // Laisser chargerNouvelleCarte g√©rer le player_start"
charger_carte_initiale;function;app\static\js\map_main_logic.js;app\static\js\map_main_logic.js;app\static\js\main_entry_point.js;123;"charger_carte_initiale(saveData.carte, null, null);"
charger_carte_initiale;function;app\static\js\map_main_logic.js;app\static\js\map_main_logic.js;app\static\js\map_main_logic.js;234;export function charger_carte_initiale() {
est_bloquee;function;app\static\js\map_main_logic.js;app\static\js\map_main_logic.js;app\static\js\map_main_logic.js;241;export function est_bloquee(x, y) { // Renommage fran√ßais + snake_case
create_monstre_state;function;app\static\js\monstre_main_logic.js;;app\static\js\monstre_main_logic.js;43;function create_monstre_state(monstre_data) {
create_monstre_state;function;app\static\js\monstre_main_logic.js;;app\static\js\monstre_main_logic.js;79;"const monstre_state = create_monstre_state({ id, nom, niveau, pv, atk, def, pos_x, pos_y });"
creer_monstre;function;app\static\js\monstre_main_logic.js;app\static\js\monstre_main_logic.js;app\static\js\combat_manager_logic.js;70;const monstre_obj = creer_monstre({
creer_monstre;function;app\static\js\monstre_main_logic.js;app\static\js\monstre_main_logic.js;app\static\js\monstre_main_logic.js;52;function creer_monstre({ id, nom, niveau, pv, atk, def, image, base_id, pos_x = 0, pos_y = 0 }) {
creer_element_monstre;function;app\static\js\monstre_main_logic.js;;app\static\js\monstre_main_logic.js;80;"const monstre_div = creer_element_monstre(image, id, pos_x, pos_y);"
creer_element_monstre;function;app\static\js\monstre_main_logic.js;;app\static\js\monstre_main_logic.js;104;function creer_element_monstre(image, unique_id, pos_x = 0, pos_y = 0) {
deplacer_monstre;function;app\static\js\monstre_main_logic.js;app\static\js\monstre_main_logic.js;app\static\js\monstre_main_logic.js;135;function deplacer_monstre(monstre) {
deplacer_monstre;function;app\static\js\monstre_main_logic.js;app\static\js\monstre_main_logic.js;app\static\js\monstre_main_logic.js;230;"deplacer_monstre(monstre);"
deplacer_tous_monstres;function;app\static\js\monstre_main_logic.js;;app\static\js\monstre_main_logic.js;173;function deplacer_tous_monstres() {
demarrer_deplacement_monstres;function;app\static\js\monstre_main_logic.js;app\static\js\monstre_main_logic.js;app\static\js\monstre_main_logic.js;94;"demarrer_deplacement_monstres();"
demarrer_deplacement_monstres;function;app\static\js\monstre_main_logic.js;app\static\js\monstre_main_logic.js;app\static\js\monstre_main_logic.js;238;function demarrer_deplacement_monstres() {
demarrer_deplacement_monstres;function;app\static\js\monstre_main_logic.js;app\static\js\monstre_main_logic.js;app\static\js\monstre_main_logic.js;254;"demarrer_deplacement_monstres();"
demarrer_deplacement_monstres;function;app\static\js\monstre_main_logic.js;app\static\js\monstre_main_logic.js;app\static\js\monstre_main_logic.js;264;"demarrer_deplacement_monstres();"
arreter_deplacement_monstres;function;app\static\js\monstre_main_logic.js;app\static\js\monstre_main_logic.js;app\static\js\combat_manager_logic.js;96;"arreter_deplacement_monstres();"
arreter_deplacement_monstres;function;app\static\js\monstre_main_logic.js;app\static\js\monstre_main_logic.js;app\static\js\monstre_main_logic.js;178;"arreter_deplacement_monstres();"
arreter_deplacement_monstres;function;app\static\js\monstre_main_logic.js;app\static\js\monstre_main_logic.js;app\static\js\monstre_main_logic.js;245;function arreter_deplacement_monstres() {
arreter_deplacement_monstres;function;app\static\js\monstre_main_logic.js;app\static\js\monstre_main_logic.js;app\static\js\monstre_main_logic.js;259;"// arreter_deplacement_monstres();"
arreter_deplacement_monstres;function;app\static\js\monstre_main_logic.js;app\static\js\monstre_main_logic.js;app\static\js\monstre_main_logic.js;377;"arreter_deplacement_monstres();"
get_monstre_par_id;function;app\static\js\monstre_main_logic.js;app\static\js\monstre_main_logic.js;app\static\js\monstre_main_logic.js;268;function get_monstre_par_id(id) {
get_monstres_adjacents_et_case;function;app\static\js\monstre_main_logic.js;app\static\js\monstre_main_logic.js;app\static\js\monstre_main_logic.js;272;function get_monstres_adjacents_et_case() {
get_monstres_actifs;function;app\static\js\monstre_main_logic.js;app\static\js\monstre_main_logic.js;app\static\js\combat_manager_logic.js;262;"const monstres_actifs = get_monstres_actifs();"
get_monstres_actifs;function;app\static\js\monstre_main_logic.js;app\static\js\monstre_main_logic.js;app\static\js\monstre_main_logic.js;283;function get_monstres_actifs() {
appliquer_degats_au_monstre;function;app\static\js\monstre_main_logic.js;app\static\js\monstre_main_logic.js;app\static\js\combat_manager_logic.js;165;"appliquer_degats_au_monstre(window.current_monstre, valeur);"
appliquer_degats_au_monstre;function;app\static\js\monstre_main_logic.js;app\static\js\monstre_main_logic.js;app\static\js\monstre_main_logic.js;288;function appliquer_degats_au_monstre(monstre, valeur) {
appliquer_soin_au_monstre;function;app\static\js\monstre_main_logic.js;app\static\js\monstre_main_logic.js;app\static\js\monstre_main_logic.js;304;function appliquer_soin_au_monstre(monstre, valeur) {
appliquer_buff_au_monstre;function;app\static\js\monstre_main_logic.js;app\static\js\monstre_main_logic.js;app\static\js\monstre_main_logic.js;309;function appliquer_buff_au_monstre(monstre, nom_buff) {
appliquer_debuff_au_monstre;function;app\static\js\monstre_main_logic.js;app\static\js\monstre_main_logic.js;app\static\js\monstre_main_logic.js;314;function appliquer_debuff_au_monstre(monstre, nom_debuff) {
appliquer_miss_au_monstre;function;app\static\js\monstre_main_logic.js;app\static\js\monstre_main_logic.js;app\static\js\monstre_main_logic.js;319;function appliquer_miss_au_monstre(monstre) {
appliquer_poison;function;app\static\js\monstre_main_logic.js;app\static\js\monstre_main_logic.js;app\static\js\monstre_main_logic.js;323;function appliquer_poison(monstre, valeur = 2, duree = 4000) {
appliquer_stun;function;app\static\js\monstre_main_logic.js;app\static\js\monstre_main_logic.js;app\static\js\monstre_main_logic.js;340;function appliquer_stun(monstre, duree = 2000) {
appliquer_debuff_atk_monstre;function;app\static\js\monstre_main_logic.js;app\static\js\monstre_main_logic.js;app\static\js\monstre_main_logic.js;349;function appliquer_debuff_atk_monstre(monstre, valeur = -2, duree = 3000) {
est_empoisonne;function;app\static\js\monstre_main_logic.js;app\static\js\monstre_main_logic.js;app\static\js\monstre_main_logic.js;354;function est_empoisonne(monstre) {
retirer_poison;function;app\static\js\monstre_main_logic.js;app\static\js\monstre_main_logic.js;app\static\js\monstre_main_logic.js;358;function retirer_poison(monstre) {
supprimer_monstre;function;app\static\js\monstre_main_logic.js;app\static\js\monstre_main_logic.js;app\routes.py;271;supprimer_monstre(x, y, carte)
supprimer_monstre;function;app\static\js\monstre_main_logic.js;app\static\js\monstre_main_logic.js;app\utils.py;85;def supprimer_monstre(x, y, nom_carte):
supprimer_monstre;function;app\static\js\monstre_main_logic.js;app\static\js\monstre_main_logic.js;app\static\js\monstre_main_logic.js;363;function supprimer_monstre(monstre) {
stop_all_monstres;function;app\static\js\monstre_main_logic.js;;app\static\js\monstre_main_logic.js;376;function stop_all_monstres() {
creer_etat_monstre;function;app\static\js\monstre_state_logic.js;app\static\js\monstre_state_logic.js;app\static\js\monstre_state_logic.js;12;function creer_etat_monstre({ id, nom, niveau, pv, atk, def, ...autres }) {
set_monstre_pv;function;app\static\js\monstre_state_logic.js;app\static\js\monstre_state_logic.js;app\static\js\monstre_main_logic.js;290;"set_monstre_pv(monstre.state, pv_avant - valeur);"
set_monstre_pv;function;app\static\js\monstre_state_logic.js;app\static\js\monstre_state_logic.js;app\static\js\monstre_main_logic.js;305;"set_monstre_pv(monstre.state, Math.min(get_monstre_pv(monstre.state) + valeur, monstre.state.pv_max));"
set_monstre_pv;function;app\static\js\monstre_state_logic.js;app\static\js\monstre_state_logic.js;app\static\js\monstre_main_logic.js;329;"set_monstre_pv(monstre.state, get_monstre_pv(monstre.state) - valeur);"
set_monstre_pv;function;app\static\js\monstre_state_logic.js;app\static\js\monstre_state_logic.js;app\static\js\monstre_state_logic.js;29;"function set_monstre_pv(monstre, pv) { monstre.pv = pv; }"
get_monstre_pv;function;app\static\js\monstre_state_logic.js;app\static\js\monstre_state_logic.js;app\static\js\combat_manager_logic.js;166;if (get_monstre_pv(window.current_monstre.state) <= 0) {
get_monstre_pv;function;app\static\js\monstre_state_logic.js;app\static\js\monstre_state_logic.js;app\static\js\monstre_main_logic.js;289;"const pv_avant = get_monstre_pv(monstre.state);"
get_monstre_pv;function;app\static\js\monstre_state_logic.js;app\static\js\monstre_state_logic.js;app\static\js\monstre_main_logic.js;291;"const pv_apres = get_monstre_pv(monstre.state);"
get_monstre_pv;function;app\static\js\monstre_state_logic.js;app\static\js\monstre_state_logic.js;app\static\js\monstre_main_logic.js;305;"set_monstre_pv(monstre.state, Math.min(get_monstre_pv(monstre.state) + valeur, monstre.state.pv_max));"
get_monstre_pv;function;app\static\js\monstre_state_logic.js;app\static\js\monstre_state_logic.js;app\static\js\monstre_main_logic.js;329;"set_monstre_pv(monstre.state, get_monstre_pv(monstre.state) - valeur);"
get_monstre_pv;function;app\static\js\monstre_state_logic.js;app\static\js\monstre_state_logic.js;app\static\js\monstre_state_logic.js;30;"function get_monstre_pv(monstre) { return monstre.pv; }"
set_monstre_position;function;app\static\js\monstre_state_logic.js;app\static\js\monstre_state_logic.js;app\static\js\monstre_main_logic.js;81;"set_monstre_position(monstre_state, pos_x, pos_y);"
set_monstre_position;function;app\static\js\monstre_state_logic.js;app\static\js\monstre_state_logic.js;app\static\js\monstre_main_logic.js;166;"set_monstre_position(monstre.state, new_x, new_y);"
set_monstre_position;function;app\static\js\monstre_state_logic.js;app\static\js\monstre_state_logic.js;app\static\js\monstre_state_logic.js;31;"function set_monstre_position(monstre, x, y) { monstre.position = { x, y }; }"
get_monstre_position;function;app\static\js\monstre_state_logic.js;app\static\js\monstre_state_logic.js;app\static\js\combat_manager_logic.js;129;"const monster_pos = get_monstre_position(monstre.state);"
get_monstre_position;function;app\static\js\monstre_state_logic.js;app\static\js\monstre_state_logic.js;app\static\js\combat_manager_logic.js;155;"const monster_pos = get_monstre_position(window.current_monstre.state);"
get_monstre_position;function;app\static\js\monstre_state_logic.js;app\static\js\monstre_state_logic.js;app\static\js\combat_manager_logic.js;278;"const monster_pos = get_monstre_position(monstre.state);"
get_monstre_position;function;app\static\js\monstre_state_logic.js;app\static\js\monstre_state_logic.js;app\static\js\monstre_main_logic.js;140;"const monster_pos = get_monstre_position(monstre.state);"
get_monstre_position;function;app\static\js\monstre_state_logic.js;app\static\js\monstre_state_logic.js;app\static\js\monstre_main_logic.js;186;"const monster_pos = get_monstre_position(window.current_monstre.state);"
get_monstre_position;function;app\static\js\monstre_state_logic.js;app\static\js\monstre_state_logic.js;app\static\js\monstre_main_logic.js;201;"const monster_pos = get_monstre_position(monstre.state);"
get_monstre_position;function;app\static\js\monstre_state_logic.js;app\static\js\monstre_state_logic.js;app\static\js\monstre_main_logic.js;276;"const { x, y } = get_monstre_position(monstre.state);"
get_monstre_position;function;app\static\js\monstre_state_logic.js;app\static\js\monstre_state_logic.js;app\static\js\monstre_state_logic.js;32;"function get_monstre_position(monstre) { return { ...monstre.position }; }"
set_monstre_statut;function;app\static\js\monstre_state_logic.js;app\static\js\monstre_state_logic.js;app\static\js\monstre_main_logic.js;310;"set_monstre_statut(monstre.state, { type: 'buff', nom: nom_buff });"
set_monstre_statut;function;app\static\js\monstre_state_logic.js;app\static\js\monstre_state_logic.js;app\static\js\monstre_main_logic.js;315;"set_monstre_statut(monstre.state, { type: 'debuff', nom: nom_debuff });"
set_monstre_statut;function;app\static\js\monstre_state_logic.js;app\static\js\monstre_state_logic.js;app\static\js\monstre_state_logic.js;33;"function set_monstre_statut(monstre, statut) { monstre.statuts.push(statut); }"
clear_monstre_statuts;function;app\static\js\monstre_state_logic.js;app\static\js\monstre_state_logic.js;app\static\js\monstre_state_logic.js;34;"function clear_monstre_statuts(monstre) { monstre.statuts = []; }"
reset_monstre;function;app\static\js\monstre_state_logic.js;app\static\js\monstre_state_logic.js;app\static\js\monstre_state_logic.js;37;function reset_monstre(monstre, params = {}) {
get_monstre_save_data;function;app\static\js\monstre_state_logic.js;app\static\js\monstre_state_logic.js;app\static\js\monstre_state_logic.js;47;function get_monstre_save_data(monstre) {
load_monstre_data;function;app\static\js\monstre_state_logic.js;app\static\js\monstre_state_logic.js;app\static\js\monstre_state_logic.js;50;function load_monstre_data(monstre, data) {
appliquer_effet;function;app\static\js\monstre_state_logic.js;app\static\js\monstre_state_logic.js,app\static\js\utils_main_logic.js;app\static\js\monstre_main_logic.js;324;appliquer_effet(monstre.state, 'poison', {
appliquer_effet;function;app\static\js\monstre_state_logic.js;app\static\js\monstre_state_logic.js,app\static\js\utils_main_logic.js;app\static\js\monstre_main_logic.js;341;appliquer_effet(monstre.state, 'stun', {
appliquer_effet;function;app\static\js\monstre_state_logic.js;app\static\js\monstre_state_logic.js,app\static\js\utils_main_logic.js;app\static\js\monstre_state_logic.js;59;function appliquer_effet(monstre, effet, { duree = 2000, valeur = 1, on_tick, on_end } = {}) {
appliquer_effet;function;app\static\js\monstre_state_logic.js;app\static\js\monstre_state_logic.js,app\static\js\utils_main_logic.js;app\static\js\monstre_state_logic.js;96;appliquer_effet(monstre, 'debuff_atk', {
appliquer_effet;function;app\static\js\monstre_state_logic.js;app\static\js\monstre_state_logic.js,app\static\js\utils_main_logic.js;app\static\js\utils_main_logic.js;175;function appliquer_effet(effect_type, value, duration) {
a_effet;function;app\static\js\monstre_state_logic.js;app\static\js\monstre_state_logic.js;app\static\js\monstre_main_logic.js;355;"return a_effet(monstre.state, 'poison');"
a_effet;function;app\static\js\monstre_state_logic.js;app\static\js\monstre_state_logic.js;app\static\js\monstre_state_logic.js;78;function a_effet(monstre, effet) {
retirer_effet;function;app\static\js\monstre_state_logic.js;app\static\js\monstre_state_logic.js;app\static\js\monstre_main_logic.js;359;"retirer_effet(monstre.state, 'poison');"
retirer_effet;function;app\static\js\monstre_state_logic.js;app\static\js\monstre_state_logic.js;app\static\js\monstre_state_logic.js;82;function retirer_effet(monstre, effet) {
appliquer_debuff_atk;function;app\static\js\monstre_state_logic.js;app\static\js\monstre_state_logic.js;app\static\js\monstre_main_logic.js;350;"appliquer_debuff_atk(monstre.state, valeur, duree);"
appliquer_debuff_atk;function;app\static\js\monstre_state_logic.js;app\static\js\monstre_state_logic.js;app\static\js\monstre_state_logic.js;93;function appliquer_debuff_atk(monstre, valeur, duree) {
afficher_degats_monstre;function;app\static\js\monstre_visual_utils.js;app\static\js\monstre_visual_utils.js;app\static\js\monstre_main_logic.js;301;"afficher_degats_monstre(monstre.element, valeur);"
afficher_degats_monstre;function;app\static\js\monstre_visual_utils.js;app\static\js\monstre_visual_utils.js;app\static\js\monstre_main_logic.js;330;"afficher_degats_monstre(monstre.element, valeur);"
afficher_degats_monstre;function;app\static\js\monstre_visual_utils.js;app\static\js\monstre_visual_utils.js;app\static\js\monstre_visual_utils.js;10;function afficher_degats_monstre(monstre_div, valeur) {
afficher_soin_monstre;function;app\static\js\monstre_visual_utils.js;app\static\js\monstre_visual_utils.js;app\static\js\monstre_main_logic.js;306;"afficher_soin_monstre(monstre.element, valeur);"
afficher_soin_monstre;function;app\static\js\monstre_visual_utils.js;app\static\js\monstre_visual_utils.js;app\static\js\monstre_visual_utils.js;33;function afficher_soin_monstre(monstre_div, valeur) {
afficher_buff_monstre;function;app\static\js\monstre_visual_utils.js;app\static\js\monstre_visual_utils.js;app\static\js\monstre_main_logic.js;311;"afficher_buff_monstre(monstre.element, nom_buff);"
afficher_buff_monstre;function;app\static\js\monstre_visual_utils.js;app\static\js\monstre_visual_utils.js;app\static\js\monstre_main_logic.js;344;"afficher_buff_monstre(monstre.element, 'Stun fini');"
afficher_buff_monstre;function;app\static\js\monstre_visual_utils.js;app\static\js\monstre_visual_utils.js;app\static\js\monstre_visual_utils.js;56;function afficher_buff_monstre(monstre_div, nom_buff) {
afficher_debuff_monstre;function;app\static\js\monstre_visual_utils.js;app\static\js\monstre_visual_utils.js;app\static\js\monstre_main_logic.js;316;"afficher_debuff_monstre(monstre.element, nom_debuff);"
afficher_debuff_monstre;function;app\static\js\monstre_visual_utils.js;app\static\js\monstre_visual_utils.js;app\static\js\monstre_main_logic.js;335;"afficher_debuff_monstre(monstre.element, 'Poison termin√©');"
afficher_debuff_monstre;function;app\static\js\monstre_visual_utils.js;app\static\js\monstre_visual_utils.js;app\static\js\monstre_main_logic.js;351;"afficher_debuff_monstre(monstre.element, 'ATK‚Üì');"
afficher_debuff_monstre;function;app\static\js\monstre_visual_utils.js;app\static\js\monstre_visual_utils.js;app\static\js\monstre_visual_utils.js;79;function afficher_debuff_monstre(monstre_div, nom_debuff) {
afficher_miss_monstre;function;app\static\js\monstre_visual_utils.js;app\static\js\monstre_visual_utils.js;app\static\js\monstre_main_logic.js;320;"afficher_miss_monstre(monstre.element);"
afficher_miss_monstre;function;app\static\js\monstre_visual_utils.js;app\static\js\monstre_visual_utils.js;app\static\js\monstre_visual_utils.js;101;function afficher_miss_monstre(monstre_div) {
initialiser_stats_joueur;function;app\static\js\player_main_logic.js;;app\static\js\player_main_logic.js;31;function initialiser_stats_joueur(level) {
initialiser_stats_joueur;function;app\static\js\player_main_logic.js;;app\static\js\player_main_logic.js;68;"initialiser_stats_joueur(window.PLAYER_LEVEL);"
gagner_xp;function;app\static\js\player_main_logic.js;;app\static\js\player_main_logic.js;38;function gagner_xp(amount) {
level_up;function;app\static\js\player_main_logic.js;;app\static\js\player_main_logic.js;50;"level_up();"
level_up;function;app\static\js\player_main_logic.js;;app\static\js\player_main_logic.js;62;function level_up() {
update_xp_bar;function;app\static\js\player_main_logic.js;app\static\js\player_ui_logic.js;app\static\js\player_main_logic.js;44;"update_xp_bar();"
update_xp_bar;function;app\static\js\player_main_logic.js;app\static\js\player_ui_logic.js;app\static\js\player_main_logic.js;59;"update_xp_bar();"
update_xp_bar;function;app\static\js\player_main_logic.js;app\static\js\player_ui_logic.js;app\static\js\player_main_logic.js;73;function update_xp_bar() {
update_xp_bar;function;app\static\js\player_main_logic.js;app\static\js\player_ui_logic.js;app\static\js\player_ui_logic.js;71;function update_xp_bar() {
update_xp_bar;function;app\static\js\player_main_logic.js;app\static\js\player_ui_logic.js;app\static\js\player_ui_logic.js;91;"update_xp_bar();"
deplacer_joueur;function;app\static\js\player_main_logic.js;app\static\js\player_main_logic.js;app\static\js\input_handler_logic.js;134;"if (newX < 0) return deplacer_joueur('gauche');"
deplacer_joueur;function;app\static\js\player_main_logic.js;app\static\js\player_main_logic.js;app\static\js\input_handler_logic.js;135;"if (newX >= 16) return deplacer_joueur('droite');"
deplacer_joueur;function;app\static\js\player_main_logic.js;app\static\js\player_main_logic.js;app\static\js\input_handler_logic.js;136;"if (newY < 0) return deplacer_joueur('haut');"
deplacer_joueur;function;app\static\js\player_main_logic.js;app\static\js\player_main_logic.js;app\static\js\input_handler_logic.js;137;"if (newY >= 16) return deplacer_joueur('bas');"
deplacer_joueur;function;app\static\js\player_main_logic.js;app\static\js\player_main_logic.js;app\static\js\input_handler_logic.js;154;"deplacer_joueur(newX, newY);"
deplacer_joueur;function;app\static\js\player_main_logic.js;app\static\js\player_main_logic.js;app\static\js\player_main_logic.js;87;function deplacer_joueur(x, y) {
deplacer_joueur;function;app\static\js\player_main_logic.js;app\static\js\player_main_logic.js;app\static\js\player_main_logic.js;227;"deplacer_joueur(try_x, try_y);"
update_mana_bar;function;app\static\js\player_main_logic.js;app\static\js\player_ui_logic.js;app\static\js\player_main_logic.js;93;function update_mana_bar() {
update_mana_bar;function;app\static\js\player_main_logic.js;app\static\js\player_ui_logic.js;app\static\js\player_main_logic.js;127;"update_mana_bar();"
update_mana_bar;function;app\static\js\player_main_logic.js;app\static\js\player_ui_logic.js;app\static\js\player_ui_logic.js;56;function update_mana_bar() {
update_mana_bar;function;app\static\js\player_main_logic.js;app\static\js\player_ui_logic.js;app\static\js\player_ui_logic.js;90;"update_mana_bar();"
update_vie_bar;function;app\static\js\player_main_logic.js;;app\static\js\player_main_logic.js;100;function update_vie_bar() {
update_vie_bar;function;app\static\js\player_main_logic.js;;app\static\js\player_main_logic.js;152;"update_vie_bar();"
utiliser_talent;function;app\static\js\player_main_logic.js;;app\static\js\input_handler_logic.js;81;"utiliser_talent(talent, talentIndex);"
utiliser_talent;function;app\static\js\player_main_logic.js;;app\static\js\player_main_logic.js;109;function utiliser_talent(talent, index) {
initialiser_talents;function;app\static\js\player_main_logic.js;;app\static\js\main_entry_point.js;133;"initialiser_talents();"
initialiser_talents;function;app\static\js\player_main_logic.js;;app\static\js\player_main_logic.js;70;"initialiser_talents();"
initialiser_talents;function;app\static\js\player_main_logic.js;;app\static\js\player_main_logic.js;161;function initialiser_talents() {
animer_attaque;function;app\static\js\player_main_logic.js;;app\static\js\player_main_logic.js;112;"animer_attaque();"
animer_attaque;function;app\static\js\player_main_logic.js;;app\static\js\player_main_logic.js;184;function animer_attaque() {
dash_backwards;function;app\static\js\player_main_logic.js;;app\static\js\player_main_logic.js;206;function dash_backwards() {
load_player_data;function;app\static\js\player_main_logic.js;app\static\js\save_manager_logic.js;app\static\js\main_entry_point.js;98;"load_player_data(saveData);"
load_player_data;function;app\static\js\player_main_logic.js;app\static\js\save_manager_logic.js;app\static\js\player_main_logic.js;242;function load_player_data(save_data) {
load_player_data;function;app\static\js\player_main_logic.js;app\static\js\save_manager_logic.js;app\static\js\save_manager_logic.js;32;function load_player_data(saveData) {
get_player_class;function;app\static\js\player_main_logic.js;app\static\js\player_main_logic.js,app\static\js\player_state_logic.js;app\static\js\player_main_logic.js;190;"player.style.backgroundImage = `url(/static/img/classes/${get_player_class().toLowerCase()}_attack.png)`;"
get_player_class;function;app\static\js\player_main_logic.js;app\static\js\player_main_logic.js,app\static\js\player_state_logic.js;app\static\js\player_main_logic.js;197;"player.style.backgroundImage = `url(/static/img/classes/${get_player_class().toLowerCase()}_idle.png)`;"
get_player_class;function;app\static\js\player_main_logic.js;app\static\js\player_main_logic.js,app\static\js\player_state_logic.js;app\static\js\player_main_logic.js;248;function get_player_class() {
get_player_class;function;app\static\js\player_main_logic.js;app\static\js\player_main_logic.js,app\static\js\player_state_logic.js;app\static\js\player_state_logic.js;52;"function get_player_class() { return state.classe; } // Classe"
get_player_class;function;app\static\js\player_main_logic.js;app\static\js\player_main_logic.js,app\static\js\player_state_logic.js;app\static\js\player_talents_logic.js;96;"get_player_class().mana -= talent.cost;"
get_player_class;function;app\static\js\player_main_logic.js;app\static\js\player_main_logic.js,app\static\js\player_state_logic.js;app\static\js\player_talents_logic.js;209;"get_player_class().mana -= 10; // Utilise le setter pour modifier le mana"
get_player_class;function;app\static\js\player_main_logic.js;app\static\js\player_main_logic.js,app\static\js\player_state_logic.js;app\static\js\player_ui_logic.js;30;"document.getElementById('stat-class').textContent = `Classe : ${get_player_class()}`;"
get_player_level;function;app\static\js\player_state_logic.js;app\static\js\player_state_logic.js;app\static\js\player_state_logic.js;46;"function get_player_level() { return state.level; } // Niveau"
get_player_level;function;app\static\js\player_state_logic.js;app\static\js\player_state_logic.js;app\static\js\player_ui_logic.js;32;"document.getElementById('stat-level').textContent = `Niveau : ${get_player_level()}`;"
get_player_level;function;app\static\js\player_state_logic.js;app\static\js\player_state_logic.js;app\static\js\player_ui_logic.js;73;"const lvl = get_player_level();"
get_player_xp;function;app\static\js\player_state_logic.js;app\static\js\player_state_logic.js;app\static\js\player_state_logic.js;47;"function get_player_xp() { return state.xp; } // XP"
get_player_xp;function;app\static\js\player_state_logic.js;app\static\js\player_state_logic.js;app\static\js\player_ui_logic.js;72;"const xp = get_player_xp();"
get_player_pv;function;app\static\js\player_state_logic.js;app\static\js\player_state_logic.js;app\static\js\combat_manager_logic.js;144;if (get_player_pv() <= 0) {
get_player_pv;function;app\static\js\player_state_logic.js;app\static\js\player_state_logic.js;app\static\js\player_main_logic.js;103;"const percent = (get_player_pv() / get_max_vie(window.PLAYER_LEVEL)) * 100;"
get_player_pv;function;app\static\js\player_state_logic.js;app\static\js\player_state_logic.js;app\static\js\player_main_logic.js;151;"set_player_pv(Math.min(get_player_pv() + (talent.heal || 1), get_max_vie(window.PLAYER_LEVEL)));"
get_player_pv;function;app\static\js\player_state_logic.js;app\static\js\player_state_logic.js;app\static\js\player_state_logic.js;48;"function get_player_pv() { return state.pv; } // Points de vie"
get_player_pv;function;app\static\js\player_state_logic.js;app\static\js\player_state_logic.js;app\static\js\player_state_logic.js;84;"set_player_pv(Math.min(get_player_pv() + pv_bonus, get_max_player_pv()));"
get_player_pv;function;app\static\js\player_state_logic.js;app\static\js\player_state_logic.js;app\static\js\player_state_logic.js;164;"set_player_pv(Math.min(get_player_pv() + 1, get_max_vie(window.PLAYER_LEVEL)));"
get_player_pv;function;app\static\js\player_state_logic.js;app\static\js\player_state_logic.js;app\static\js\player_ui_logic.js;42;"const pv = get_player_pv();"
get_player_pv;function;app\static\js\player_state_logic.js;app\static\js\player_state_logic.js;app\static\js\player_visual_utils.js;155;"const pv_avant = get_player_pv();"
get_player_pv;function;app\static\js\player_state_logic.js;app\static\js\player_state_logic.js;app\static\js\player_visual_utils.js;157;"const pv_apres = get_player_pv();"
get_player_mana;function;app\static\js\player_state_logic.js;app\static\js\player_state_logic.js;app\static\js\player_main_logic.js;96;"const percent = (get_player_mana() / get_max_mana(window.PLAYER_LEVEL)) * 100;"
get_player_mana;function;app\static\js\player_state_logic.js;app\static\js\player_state_logic.js;app\static\js\player_main_logic.js;111;"if (get_player_mana() < talent.cost) return;"
get_player_mana;function;app\static\js\player_state_logic.js;app\static\js\player_state_logic.js;app\static\js\player_main_logic.js;126;"set_player_mana(get_player_mana() - talent.cost);"
get_player_mana;function;app\static\js\player_state_logic.js;app\static\js\player_state_logic.js;app\static\js\player_state_logic.js;49;"function get_player_mana() { return state.mana; } // Mana"
get_player_mana;function;app\static\js\player_state_logic.js;app\static\js\player_state_logic.js;app\static\js\player_state_logic.js;85;"set_player_mana(Math.min(get_player_mana() + mana_bonus, get_max_player_mana()));"
get_player_mana;function;app\static\js\player_state_logic.js;app\static\js\player_state_logic.js;app\static\js\player_state_logic.js;165;"set_player_mana(Math.min(get_player_mana() + 1, get_max_mana(window.PLAYER_LEVEL)));"
get_player_mana;function;app\static\js\player_state_logic.js;app\static\js\player_state_logic.js;app\static\js\player_ui_logic.js;57;"const mana = get_player_mana();"
get_player_atk;function;app\static\js\player_state_logic.js;app\static\js\player_state_logic.js;app\static\js\player_state_logic.js;50;"function get_player_atk() { return state.atk; } // Attaque"
get_player_atk;function;app\static\js\player_state_logic.js;app\static\js\player_state_logic.js;app\static\js\player_ui_logic.js;26;"document.getElementById('stat-atk').textContent = `ATK : ${get_player_atk()}`;"
get_player_def;function;app\static\js\player_state_logic.js;app\static\js\player_state_logic.js;app\static\js\combat_manager_logic.js;140;"const def = get_player_def();"
get_player_def;function;app\static\js\player_state_logic.js;app\static\js\player_state_logic.js;app\static\js\player_state_logic.js;51;"function get_player_def() { return state.def; } // D√©fense"
get_player_def;function;app\static\js\player_state_logic.js;app\static\js\player_state_logic.js;app\static\js\player_ui_logic.js;28;"document.getElementById('stat-def').textContent = `DEF : ${get_player_def()}`;"
get_player_position;function;app\static\js\player_state_logic.js;app\static\js\player_state_logic.js;app\static\js\player_state_logic.js;53;"function get_player_position() { return { ...state.position }; } // Position (copie)"
get_player_inventory;function;app\static\js\player_state_logic.js;app\static\js\player_state_logic.js;app\static\js\player_state_logic.js;54;"function get_player_inventory() { return [...state.inventaire]; } // Inventaire (copie)"
get_player_talents;function;app\static\js\player_state_logic.js;app\static\js\player_state_logic.js;app\static\js\player_state_logic.js;55;"function get_player_talents() { return [...state.talents]; } // Talents (copie)"
get_player_map;function;app\static\js\player_state_logic.js;app\static\js\player_state_logic.js;app\static\js\player_state_logic.js;56;"function get_player_map() { return state.carte; } // Carte courante"
get_central_player_position;function;app\static\js\player_state_logic.js;app\static\js\player_state_logic.js;app\static\js\player_state_logic.js;57;"function get_central_player_position() { return { ...state.position }; } // Alias position"
get_position_joueur;function;app\static\js\player_state_logic.js;app\static\js\player_state_logic.js;app\static\js\camera_main_logic.js;30;"const { x: playerX, y: playerY } = get_position_joueur();"
get_position_joueur;function;app\static\js\player_state_logic.js;app\static\js\player_state_logic.js;app\static\js\combat_manager_logic.js;78;"const player_x = get_position_joueur().x;"
get_position_joueur;function;app\static\js\player_state_logic.js;app\static\js\player_state_logic.js;app\static\js\combat_manager_logic.js;79;"const player_y = get_position_joueur().y;"
get_position_joueur;function;app\static\js\player_state_logic.js;app\static\js\player_state_logic.js;app\static\js\combat_manager_logic.js;127;"const player_x = get_position_joueur().x;"
get_position_joueur;function;app\static\js\player_state_logic.js;app\static\js\player_state_logic.js;app\static\js\combat_manager_logic.js;128;"const player_y = get_position_joueur().y;"
get_position_joueur;function;app\static\js\player_state_logic.js;app\static\js\player_state_logic.js;app\static\js\combat_manager_logic.js;153;"const player_x = get_position_joueur().x;"
get_position_joueur;function;app\static\js\player_state_logic.js;app\static\js\player_state_logic.js;app\static\js\combat_manager_logic.js;154;"const player_y = get_position_joueur().y;"
get_position_joueur;function;app\static\js\player_state_logic.js;app\static\js\player_state_logic.js;app\static\js\combat_manager_logic.js;189;fetch(`/api/rencontre?x=${get_position_joueur().x}&y=${get_position_joueur().y}&carte=${modules.current_map}`)
get_position_joueur;function;app\static\js\player_state_logic.js;app\static\js\player_state_logic.js;app\static\js\combat_manager_logic.js;206;"const px = get_position_joueur().x;"
get_position_joueur;function;app\static\js\player_state_logic.js;app\static\js\player_state_logic.js;app\static\js\combat_manager_logic.js;207;"const py = get_position_joueur().y;"
get_position_joueur;function;app\static\js\player_state_logic.js;app\static\js\player_state_logic.js;app\static\js\combat_manager_logic.js;244;get_position_joueur().x >= zone.x &&
get_position_joueur;function;app\static\js\player_state_logic.js;app\static\js\player_state_logic.js;app\static\js\combat_manager_logic.js;245;get_position_joueur().x < zone.x + zone.width &&
get_position_joueur;function;app\static\js\player_state_logic.js;app\static\js\player_state_logic.js;app\static\js\combat_manager_logic.js;246;get_position_joueur().y >= zone.y &&
get_position_joueur;function;app\static\js\player_state_logic.js;app\static\js\player_state_logic.js;app\static\js\combat_manager_logic.js;247;get_position_joueur().y < zone.y + zone.height
get_position_joueur;function;app\static\js\player_state_logic.js;app\static\js\player_state_logic.js;app\static\js\combat_manager_logic.js;256;"const px = get_position_joueur().x;"
get_position_joueur;function;app\static\js\player_state_logic.js;app\static\js\player_state_logic.js;app\static\js\combat_manager_logic.js;257;"const py = get_position_joueur().y;"
get_position_joueur;function;app\static\js\player_state_logic.js;app\static\js\player_state_logic.js;app\static\js\input_handler_logic.js;114;"const { x, y } = get_position_joueur();"
get_position_joueur;function;app\static\js\player_state_logic.js;app\static\js\player_state_logic.js;app\static\js\map_main_logic.js;64;"let spawnX = dir[direction].spawnX !== undefined ? dir[direction].spawnX : get_position_joueur().x;"
get_position_joueur;function;app\static\js\player_state_logic.js;app\static\js\player_state_logic.js;app\static\js\map_main_logic.js;65;"let spawnY = dir[direction].spawnY !== undefined ? dir[direction].spawnY : get_position_joueur().y;"
get_position_joueur;function;app\static\js\player_state_logic.js;app\static\js\player_state_logic.js;app\static\js\map_main_logic.js;202;"playerDiv.style.backgroundImage = `url(/static/img/classes/${get_position_joueur().classe.toLowerCase()}_idle.png)`;"
get_position_joueur;function;app\static\js\player_state_logic.js;app\static\js\player_state_logic.js;app\static\js\monstre_main_logic.js;87;"const player_x = get_position_joueur().x;"
get_position_joueur;function;app\static\js\player_state_logic.js;app\static\js\player_state_logic.js;app\static\js\monstre_main_logic.js;88;"const player_y = get_position_joueur().y;"
get_position_joueur;function;app\static\js\player_state_logic.js;app\static\js\player_state_logic.js;app\static\js\monstre_main_logic.js;138;"const player_x = get_position_joueur().x;"
get_position_joueur;function;app\static\js\player_state_logic.js;app\static\js\player_state_logic.js;app\static\js\monstre_main_logic.js;139;"const player_y = get_position_joueur().y;"
get_position_joueur;function;app\static\js\player_state_logic.js;app\static\js\player_state_logic.js;app\static\js\monstre_main_logic.js;184;"const player_x = get_position_joueur().x;"
get_position_joueur;function;app\static\js\player_state_logic.js;app\static\js\player_state_logic.js;app\static\js\monstre_main_logic.js;185;"const player_y = get_position_joueur().y;"
get_position_joueur;function;app\static\js\player_state_logic.js;app\static\js\player_state_logic.js;app\static\js\monstre_main_logic.js;199;"const player_x = get_position_joueur().x;"
get_position_joueur;function;app\static\js\player_state_logic.js;app\static\js\player_state_logic.js;app\static\js\monstre_main_logic.js;200;"const player_y = get_position_joueur().y;"
get_position_joueur;function;app\static\js\player_state_logic.js;app\static\js\player_state_logic.js;app\static\js\monstre_main_logic.js;273;"const player_x = get_position_joueur().x;"
get_position_joueur;function;app\static\js\player_state_logic.js;app\static\js\player_state_logic.js;app\static\js\monstre_main_logic.js;274;"const player_y = get_position_joueur().y;"
get_position_joueur;function;app\static\js\player_state_logic.js;app\static\js\player_state_logic.js;app\static\js\player_main_logic.js;207;"let current_x = get_position_joueur().x;"
get_position_joueur;function;app\static\js\player_state_logic.js;app\static\js\player_state_logic.js;app\static\js\player_main_logic.js;208;"let current_y = get_position_joueur().y;"
get_position_joueur;function;app\static\js\player_state_logic.js;app\static\js\player_state_logic.js;app\static\js\player_state_logic.js;58;"function get_position_joueur() { return state.position; }"
get_current_class_modifiers;function;app\static\js\player_state_logic.js;app\static\js\player_state_logic.js;app\static\js\player_state_logic.js;59;"function get_current_class_modifiers() { return CLASS_MODIFIERS[state.classe] || { atk: 0, def: 0, hp: 0, mana: 0 }; }"
get_current_class_modifiers;function;app\static\js\player_state_logic.js;app\static\js\player_state_logic.js;app\static\js\player_state_logic.js;62;"const mods = get_current_class_modifiers();"
get_current_class_modifiers;function;app\static\js\player_state_logic.js;app\static\js\player_state_logic.js;app\static\js\player_state_logic.js;77;"const mods = get_current_class_modifiers();"
get_player_effective_stats;function;app\static\js\player_state_logic.js;app\static\js\player_state_logic.js;app\static\js\player_state_logic.js;60;function get_player_effective_stats() {
get_player_effective_stats;function;app\static\js\player_state_logic.js;app\static\js\player_state_logic.js;app\static\js\player_talents_logic.js;89;"const manaActuel = get_player_effective_stats().mana;"
start_regen;function;app\static\js\player_state_logic.js;app\static\js\player_state_logic.js;app\static\js\player_state_logic.js;73;function start_regen() {
start_regen;function;app\static\js\player_state_logic.js;app\static\js\player_state_logic.js;app\static\js\player_state_logic.js;160;function start_regen() {
start_regen;function;app\static\js\player_state_logic.js;app\static\js\player_state_logic.js;app\static\js\save_manager_logic.js;71;"start_regen();"
stop_regen;function;app\static\js\player_state_logic.js;app\static\js\player_state_logic.js;app\static\js\player_state_logic.js;88;function stop_regen() {
stop_regen;function;app\static\js\player_state_logic.js;app\static\js\player_state_logic.js;app\static\js\player_state_logic.js;169;function stop_regen() {
stop_regen;function;app\static\js\player_state_logic.js;app\static\js\player_state_logic.js;app\static\js\player_visual_utils.js;214;"if (window.stop_regen) window.stop_regen();"
get_max_player_pv;function;app\static\js\player_state_logic.js;app\static\js\player_state_logic.js;app\static\js\player_state_logic.js;80;"const pv_bonus_percent = Math.max(1, Math.floor(get_max_player_pv() * 0.05));"
get_max_player_pv;function;app\static\js\player_state_logic.js;app\static\js\player_state_logic.js;app\static\js\player_state_logic.js;84;"set_player_pv(Math.min(get_player_pv() + pv_bonus, get_max_player_pv()));"
get_max_player_pv;function;app\static\js\player_state_logic.js;app\static\js\player_state_logic.js;app\static\js\player_state_logic.js;94;"function get_max_player_pv() { return state.pv_max || 120; }"
get_max_player_pv;function;app\static\js\player_state_logic.js;app\static\js\player_state_logic.js;app\static\js\player_ui_logic.js;43;"const pvMax = get_max_player_pv();"
get_max_player_pv;function;app\static\js\player_state_logic.js;app\static\js\player_state_logic.js;app\static\js\save_manager_logic.js;56;"set_player_pv(get_max_player_pv());"
get_max_player_mana;function;app\static\js\player_state_logic.js;app\static\js\player_state_logic.js;app\static\js\player_state_logic.js;81;"const mana_bonus_percent = Math.max(1, Math.floor(get_max_player_mana() * 0.05));"
get_max_player_mana;function;app\static\js\player_state_logic.js;app\static\js\player_state_logic.js;app\static\js\player_state_logic.js;85;"set_player_mana(Math.min(get_player_mana() + mana_bonus, get_max_player_mana()));"
get_max_player_mana;function;app\static\js\player_state_logic.js;app\static\js\player_state_logic.js;app\static\js\player_state_logic.js;95;"function get_max_player_mana() { return state.mana_max || 15; }"
get_max_player_mana;function;app\static\js\player_state_logic.js;app\static\js\player_state_logic.js;app\static\js\player_ui_logic.js;58;"const manaMax = get_max_player_mana();"
get_max_player_mana;function;app\static\js\player_state_logic.js;app\static\js\player_state_logic.js;app\static\js\save_manager_logic.js;61;"set_player_mana(get_max_player_mana());"
emit_player_stats_changed;function;app\static\js\player_state_logic.js;;app\static\js\player_state_logic.js;99;function emit_player_stats_changed() {
emit_player_stats_changed;function;app\static\js\player_state_logic.js;;app\static\js\player_state_logic.js;102;"function set_player_level(lvl) { state.level = lvl; emit_player_stats_changed(); }"
emit_player_stats_changed;function;app\static\js\player_state_logic.js;;app\static\js\player_state_logic.js;103;"function set_player_xp(xp) { state.xp = xp; emit_player_stats_changed(); }"
emit_player_stats_changed;function;app\static\js\player_state_logic.js;;app\static\js\player_state_logic.js;107;"emit_player_stats_changed();"
emit_player_stats_changed;function;app\static\js\player_state_logic.js;;app\static\js\player_state_logic.js;115;"function set_player_mana(mana) { state.mana = mana; emit_player_stats_changed(); }"
emit_player_stats_changed;function;app\static\js\player_state_logic.js;;app\static\js\player_state_logic.js;116;"function set_player_atk(atk) { state.atk = atk; emit_player_stats_changed(); }"
emit_player_stats_changed;function;app\static\js\player_state_logic.js;;app\static\js\player_state_logic.js;117;"function set_player_def(def_) { state.def = def_; emit_player_stats_changed(); }"
emit_player_stats_changed;function;app\static\js\player_state_logic.js;;app\static\js\player_state_logic.js;118;"function set_player_class(classe) { state.classe = classe; emit_player_stats_changed(); }"
emit_player_stats_changed;function;app\static\js\player_state_logic.js;;app\static\js\player_state_logic.js;144;"function set_player_inventory(inv) { state.inventaire = [...inv]; emit_player_stats_changed(); }"
emit_player_stats_changed;function;app\static\js\player_state_logic.js;;app\static\js\player_state_logic.js;145;"function set_player_talents(tal) { state.talents = [...tal]; emit_player_stats_changed(); }"
emit_player_stats_changed;function;app\static\js\player_state_logic.js;;app\static\js\player_state_logic.js;146;"function set_player_map(map) { state.carte = map; emit_player_stats_changed(); }"
emit_player_stats_changed;function;app\static\js\player_state_logic.js;;app\static\js\player_state_logic.js;151;"emit_player_stats_changed();"
set_player_level;function;app\static\js\player_state_logic.js;app\static\js\player_state_logic.js;app\static\js\player_state_logic.js;102;"function set_player_level(lvl) { state.level = lvl; emit_player_stats_changed(); }"
set_player_xp;function;app\static\js\player_state_logic.js;app\static\js\player_state_logic.js;app\static\js\player_main_logic.js;43;"set_player_xp(player_xp);"
set_player_xp;function;app\static\js\player_state_logic.js;app\static\js\player_state_logic.js;app\static\js\player_main_logic.js;48;"set_player_xp(player_xp);"
set_player_xp;function;app\static\js\player_state_logic.js;app\static\js\player_state_logic.js;app\static\js\player_main_logic.js;53;"set_player_xp(player_xp);"
set_player_xp;function;app\static\js\player_state_logic.js;app\static\js\player_state_logic.js;app\static\js\player_main_logic.js;58;"set_player_xp(player_xp);"
set_player_xp;function;app\static\js\player_state_logic.js;app\static\js\player_state_logic.js;app\static\js\player_main_logic.js;65;"set_player_xp(window.PLAYER_XP);"
set_player_xp;function;app\static\js\player_state_logic.js;app\static\js\player_state_logic.js;app\static\js\player_state_logic.js;103;"function set_player_xp(xp) { state.xp = xp; emit_player_stats_changed(); }"
set_player_xp;function;app\static\js\player_state_logic.js;app\static\js\player_state_logic.js;app\static\js\save_manager_logic.js;41;"set_player_xp(xp);"
set_player_pv;function;app\static\js\player_state_logic.js;app\static\js\player_state_logic.js;app\static\js\player_main_logic.js;32;"set_player_pv(get_max_vie(level));"
set_player_pv;function;app\static\js\player_state_logic.js;app\static\js\player_state_logic.js;app\static\js\player_main_logic.js;151;"set_player_pv(Math.min(get_player_pv() + (talent.heal || 1), get_max_vie(window.PLAYER_LEVEL)));"
set_player_pv;function;app\static\js\player_state_logic.js;app\static\js\player_state_logic.js;app\static\js\player_state_logic.js;84;"set_player_pv(Math.min(get_player_pv() + pv_bonus, get_max_player_pv()));"
set_player_pv;function;app\static\js\player_state_logic.js;app\static\js\player_state_logic.js;app\static\js\player_state_logic.js;104;function set_player_pv(pv) {
set_player_pv;function;app\static\js\player_state_logic.js;app\static\js\player_state_logic.js;app\static\js\player_state_logic.js;164;"set_player_pv(Math.min(get_player_pv() + 1, get_max_vie(window.PLAYER_LEVEL)));"
set_player_pv;function;app\static\js\player_state_logic.js;app\static\js\player_state_logic.js;app\static\js\player_visual_utils.js;156;"set_player_pv(pv_avant - valeur);"
set_player_pv;function;app\static\js\player_state_logic.js;app\static\js\player_state_logic.js;app\static\js\save_manager_logic.js;52;"set_player_pv(saveData.vie);"
set_player_pv;function;app\static\js\player_state_logic.js;app\static\js\player_state_logic.js;app\static\js\save_manager_logic.js;54;"set_player_pv(saveData.pv);"
set_player_pv;function;app\static\js\player_state_logic.js;app\static\js\player_state_logic.js;app\static\js\save_manager_logic.js;56;"set_player_pv(get_max_player_pv());"
set_player_mana;function;app\static\js\player_state_logic.js;app\static\js\player_state_logic.js;app\static\js\player_main_logic.js;33;"set_player_mana(get_max_mana(level));"
set_player_mana;function;app\static\js\player_state_logic.js;app\static\js\player_state_logic.js;app\static\js\player_main_logic.js;126;"set_player_mana(get_player_mana() - talent.cost);"
set_player_mana;function;app\static\js\player_state_logic.js;app\static\js\player_state_logic.js;app\static\js\player_state_logic.js;85;"set_player_mana(Math.min(get_player_mana() + mana_bonus, get_max_player_mana()));"
set_player_mana;function;app\static\js\player_state_logic.js;app\static\js\player_state_logic.js;app\static\js\player_state_logic.js;115;"function set_player_mana(mana) { state.mana = mana; emit_player_stats_changed(); }"
set_player_mana;function;app\static\js\player_state_logic.js;app\static\js\player_state_logic.js;app\static\js\player_state_logic.js;165;"set_player_mana(Math.min(get_player_mana() + 1, get_max_mana(window.PLAYER_LEVEL)));"
set_player_mana;function;app\static\js\player_state_logic.js;app\static\js\player_state_logic.js;app\static\js\save_manager_logic.js;59;"set_player_mana(saveData.mana);"
set_player_mana;function;app\static\js\player_state_logic.js;app\static\js\player_state_logic.js;app\static\js\save_manager_logic.js;61;"set_player_mana(get_max_player_mana());"
set_player_atk;function;app\static\js\player_state_logic.js;app\static\js\player_state_logic.js;app\static\js\player_state_logic.js;116;"function set_player_atk(atk) { state.atk = atk; emit_player_stats_changed(); }"
set_player_def;function;app\static\js\player_state_logic.js;app\static\js\player_state_logic.js;app\static\js\player_state_logic.js;117;"function set_player_def(def_) { state.def = def_; emit_player_stats_changed(); }"
set_player_class;function;app\static\js\player_state_logic.js;app\static\js\player_state_logic.js;app\static\js\player_state_logic.js;118;"function set_player_class(classe) { state.classe = classe; emit_player_stats_changed(); }"
update_player_position;function;app\static\js\player_state_logic.js;app\static\js\player_state_logic.js;app\static\js\player_state_logic.js;119;function update_player_position(x, y) {
set_player_position;function;app\static\js\player_state_logic.js;app\static\js\player_state_logic.js;app\static\js\map_main_logic.js;188;if (!set_player_position(targetX, targetY, true)) {
set_player_position;function;app\static\js\player_state_logic.js;app\static\js\player_state_logic.js;app\static\js\player_main_logic.js;88;"set_player_position(x, y);"
set_player_position;function;app\static\js\player_state_logic.js;app\static\js\player_state_logic.js;app\static\js\player_state_logic.js;120;"set_player_position(x, y);"
set_player_position;function;app\static\js\player_state_logic.js;app\static\js\player_state_logic.js;app\static\js\player_state_logic.js;122;function set_player_position(x, y, check_blocked = false) {
set_player_position;function;app\static\js\player_state_logic.js;app\static\js\player_state_logic.js;app\static\js\save_manager_logic.js;48;"set_player_position(saveData.position.x, saveData.position.y);"
set_player_inventory;function;app\static\js\player_state_logic.js;app\static\js\player_state_logic.js;app\static\js\player_state_logic.js;144;"function set_player_inventory(inv) { state.inventaire = [...inv]; emit_player_stats_changed(); }"
set_player_inventory;function;app\static\js\player_state_logic.js;app\static\js\player_state_logic.js;app\static\js\save_manager_logic.js;65;"set_player_inventory(saveData.inventaire);"
set_player_talents;function;app\static\js\player_state_logic.js;app\static\js\player_state_logic.js;app\static\js\player_state_logic.js;145;"function set_player_talents(tal) { state.talents = [...tal]; emit_player_stats_changed(); }"
set_player_talents;function;app\static\js\player_state_logic.js;app\static\js\player_state_logic.js;app\static\js\save_manager_logic.js;68;"set_player_talents(saveData.talents);"
set_player_map;function;app\static\js\player_state_logic.js;app\static\js\player_state_logic.js;app\static\js\player_state_logic.js;146;"function set_player_map(map) { state.carte = map; emit_player_stats_changed(); }"
set_player_map;function;app\static\js\player_state_logic.js;app\static\js\player_state_logic.js;app\static\js\save_manager_logic.js;44;"set_player_map(saveData.carte || saveData.map);"
init_player_state;function;app\static\js\player_state_logic.js;app\static\js\player_state_logic.js;app\static\js\player_state_logic.js;149;function init_player_state(init_data = {}) {
init_player_state;function;app\static\js\player_state_logic.js;app\static\js\player_state_logic.js;app\static\js\save_manager_logic.js;37;init_player_state({
get_player_save_data;function;app\static\js\player_state_logic.js;app\static\js\player_state_logic.js;app\static\js\main_entry_point.js;146;"const saveData = get_player_save_data();"
get_player_save_data;function;app\static\js\player_state_logic.js;app\static\js\player_state_logic.js;app\static\js\player_state_logic.js;155;function get_player_save_data() {
get_player_save_data;function;app\static\js\player_state_logic.js;app\static\js\player_state_logic.js;app\static\js\save_manager_logic.js;22;"const saveData = get_player_save_data(); // Utilisation de la fonction import√©e"
getAllTalentsList;function;app\static\js\player_talents_logic.js;app\static\js\player_talents_logic.js;app\static\js\player_talents_logic.js;16;function getAllTalentsList() {
getAllTalentsList;function;app\static\js\player_talents_logic.js;app\static\js\player_talents_logic.js;app\static\js\player_talents_logic.js;30;"const allTalents = getAllTalentsList();"
getTalentsFromIds;function;app\static\js\player_talents_logic.js;app\static\js\player_talents_logic.js;app\static\js\player_talents_logic.js;29;function getTalentsFromIds(ids) {
get_talents;function;app\static\js\player_talents_logic.js;app\static\js\player_talents_logic.js;app\static\js\input_handler_logic.js;77;"const talents = get_talents();"
get_talents;function;app\static\js\player_talents_logic.js;app\static\js\player_talents_logic.js;app\static\js\input_handler_logic.js;102;"const talentsData = get_talents();"
get_talents;function;app\static\js\player_talents_logic.js;app\static\js\player_talents_logic.js;app\static\js\player_main_logic.js;163;"const talents_data = get_talents();"
get_talents;function;app\static\js\player_talents_logic.js;app\static\js\player_talents_logic.js;app\static\js\player_talents_logic.js;38;function get_talents() {
utiliserTalent;function;app\static\js\player_talents_logic.js;app\static\js\player_talents_logic.js;app\static\js\player_talents_logic.js;67;function utiliserTalent(talent, index) {
dashStealth;function;app\static\js\player_talents_logic.js;app\static\js\player_talents_logic.js;app\static\js\player_talents_logic.js;140;function dashStealth(dureeFurtivite = 2000) {
update_player_stats_panel;function;app\static\js\player_ui_logic.js;app\static\js\player_ui_logic.js;app\static\js\player_ui_logic.js;24;function update_player_stats_panel() {
update_player_stats_panel;function;app\static\js\player_ui_logic.js;app\static\js\player_ui_logic.js;app\static\js\player_ui_logic.js;88;"update_player_stats_panel();"
update_pv_bar;function;app\static\js\player_ui_logic.js;app\static\js\player_ui_logic.js;app\static\js\player_ui_logic.js;41;function update_pv_bar() {
update_pv_bar;function;app\static\js\player_ui_logic.js;app\static\js\player_ui_logic.js;app\static\js\player_ui_logic.js;89;"update_pv_bar();"
update_all_player_ui;function;app\static\js\player_ui_logic.js;app\static\js\player_ui_logic.js;app\static\js\main_entry_point.js;138;"update_all_player_ui();"
update_all_player_ui;function;app\static\js\player_ui_logic.js;app\static\js\player_ui_logic.js;app\static\js\player_ui_logic.js;87;function update_all_player_ui() {
create_floating_text;function;app\static\js\player_visual_utils.js;app\static\js\player_visual_utils.js;app\static\js\player_main_logic.js;69;"create_floating_text(`Niveau ${window.PLAYER_LEVEL} !`, '#FFD700');"
create_floating_text;function;app\static\js\player_visual_utils.js;app\static\js\player_visual_utils.js;app\static\js\player_main_logic.js;124;"create_floating_text(talent.effect_text, talent.color || ""white"");"
create_floating_text;function;app\static\js\player_visual_utils.js;app\static\js\player_visual_utils.js;app\static\js\player_visual_utils.js;23;function create_floating_text(text, color) {
create_floating_text;function;app\static\js\player_visual_utils.js;app\static\js\player_visual_utils.js;app\static\js\player_visual_utils.js;249;"create_floating_text(`+${valeur}`, 'lightgreen');"
create_floating_text;function;app\static\js\player_visual_utils.js;app\static\js\player_visual_utils.js;app\static\js\player_visual_utils.js;256;"create_floating_text(`CRIT ! -${valeur}`, '#FFD700');"
create_floating_text;function;app\static\js\player_visual_utils.js;app\static\js\player_visual_utils.js;app\static\js\player_visual_utils.js;262;"create_floating_text('Esquive !', '#87CEEB');"
create_floating_text;function;app\static\js\player_visual_utils.js;app\static\js\player_visual_utils.js;app\static\js\player_visual_utils.js;268;"create_floating_text('Parade !', '#00BFFF');"
create_floating_text;function;app\static\js\player_visual_utils.js;app\static\js\player_visual_utils.js;app\static\js\player_visual_utils.js;275;"create_floating_text(`+${nom_buff}`, '#66ff99');"
create_floating_text;function;app\static\js\player_visual_utils.js;app\static\js\player_visual_utils.js;app\static\js\player_visual_utils.js;282;"create_floating_text(`-${nom_debuff}`, '#ff6666');"
create_floating_text;function;app\static\js\player_visual_utils.js;app\static\js\player_visual_utils.js;app\static\js\player_visual_utils.js;288;"create_floating_text('Miss !', '#bbb');"
apply_boost;function;app\static\js\player_visual_utils.js;app\static\js\player_visual_utils.js;app\static\js\player_main_logic.js;154;"apply_boost(talent.boost_type, talent.boost_value, talent.duration);"
apply_boost;function;app\static\js\player_visual_utils.js;app\static\js\player_visual_utils.js;app\static\js\player_visual_utils.js;50;function apply_boost(boost_type, amount, duration) {
apply_shield;function;app\static\js\player_visual_utils.js;app\static\js\player_visual_utils.js;app\static\js\player_visual_utils.js;66;function apply_shield(value, duration) {
apply_stun;function;app\static\js\player_visual_utils.js;app\static\js\player_visual_utils.js;app\static\js\player_visual_utils.js;77;function apply_stun(monstre, duration) {
apply_poison;function;app\static\js\player_visual_utils.js;app\static\js\player_visual_utils.js;app\static\js\player_visual_utils.js;91;function apply_poison(duration) {
afficher_degats;function;app\static\js\player_visual_utils.js;app\static\js\player_visual_utils.js;app\static\js\player_visual_utils.js;104;function afficher_degats(valeur) {
afficher_mob_degats;function;app\static\js\player_visual_utils.js;app\static\js\player_visual_utils.js;app\static\js\player_visual_utils.js;129;function afficher_mob_degats(valeur) {
infliger_degats_au_joueur;function;app\static\js\player_visual_utils.js;app\static\js\player_visual_utils.js;app\static\js\combat_manager_logic.js;142;"infliger_degats_au_joueur(degats);"
infliger_degats_au_joueur;function;app\static\js\player_visual_utils.js;app\static\js\player_visual_utils.js;app\static\js\player_visual_utils.js;153;function infliger_degats_au_joueur(valeur) {
register_game_interval;function;app\static\js\player_visual_utils.js;app\static\js\player_visual_utils.js;app\static\js\monstre_main_logic.js;241;"register_game_interval(interval_deplacement_monstres);"
register_game_interval;function;app\static\js\player_visual_utils.js;app\static\js\player_visual_utils.js;app\static\js\player_visual_utils.js;177;function register_game_interval(interval_id) {
clear_game_interval;function;app\static\js\player_visual_utils.js;app\static\js\player_visual_utils.js;app\static\js\monstre_main_logic.js;247;"clear_game_interval(interval_deplacement_monstres);"
clear_game_interval;function;app\static\js\player_visual_utils.js;app\static\js\player_visual_utils.js;app\static\js\player_visual_utils.js;187;function clear_game_interval(interval_id) {
clear_all_game_intervals;function;app\static\js\player_visual_utils.js;;app\static\js\player_visual_utils.js;197;function clear_all_game_intervals() {
clear_all_game_intervals;function;app\static\js\player_visual_utils.js;;app\static\js\player_visual_utils.js;217;"clear_all_game_intervals();"
afficher_game_over;function;app\static\js\player_visual_utils.js;app\static\js\player_visual_utils.js;app\static\js\player_state_logic.js;109;"window.afficher_game_over();"
afficher_game_over;function;app\static\js\player_visual_utils.js;app\static\js\player_visual_utils.js;app\static\js\player_visual_utils.js;162;"afficher_game_over();"
afficher_game_over;function;app\static\js\player_visual_utils.js;app\static\js\player_visual_utils.js;app\static\js\player_visual_utils.js;208;function afficher_game_over() {
clear_all_intervals;function;app\static\js\player_visual_utils.js;;app\static\js\player_visual_utils.js;230;function clear_all_intervals() {
afficher_soin;function;app\static\js\player_visual_utils.js;app\static\js\player_visual_utils.js;app\static\js\player_visual_utils.js;248;function afficher_soin(valeur) {
afficher_critique;function;app\static\js\player_visual_utils.js;app\static\js\player_visual_utils.js;app\static\js\player_visual_utils.js;255;function afficher_critique(valeur) {
afficher_esquive;function;app\static\js\player_visual_utils.js;app\static\js\player_visual_utils.js;app\static\js\player_visual_utils.js;261;function afficher_esquive() {
afficher_parade;function;app\static\js\player_visual_utils.js;app\static\js\player_visual_utils.js;app\static\js\player_visual_utils.js;267;function afficher_parade() {
afficher_buff;function;app\static\js\player_visual_utils.js;app\static\js\player_visual_utils.js;app\static\js\player_visual_utils.js;274;function afficher_buff(nom_buff) {
afficher_debuff;function;app\static\js\player_visual_utils.js;app\static\js\player_visual_utils.js;app\static\js\player_visual_utils.js;281;function afficher_debuff(nom_debuff) {
afficher_miss;function;app\static\js\player_visual_utils.js;app\static\js\player_visual_utils.js;app\static\js\player_visual_utils.js;287;function afficher_miss() {
getXpToNextLevel;function;app\static\js\progression_main_logic.js;app\static\js\progression_main_logic.js;app\static\js\progression_main_logic.js;12;function getXpToNextLevel(level) {
getXpToNextLevel;function;app\static\js\progression_main_logic.js;app\static\js\progression_main_logic.js;app\static\js\progression_main_logic.js;18;"return getXpToNextLevel(level);"
get_xp_to_next_level;function;app\static\js\progression_main_logic.js;app\static\js\progression_main_logic.js;app\static\js\player_main_logic.js;40;"const max_xp = get_xp_to_next_level(10);"
get_xp_to_next_level;function;app\static\js\progression_main_logic.js;app\static\js\progression_main_logic.js;app\static\js\player_main_logic.js;52;"player_xp = get_xp_to_next_level(10);"
get_xp_to_next_level;function;app\static\js\progression_main_logic.js;app\static\js\progression_main_logic.js;app\static\js\player_main_logic.js;67;"xp_to_next_level = get_xp_to_next_level(window.PLAYER_LEVEL);"
get_xp_to_next_level;function;app\static\js\progression_main_logic.js;app\static\js\progression_main_logic.js;app\static\js\player_main_logic.js;78;"max_xp = get_xp_to_next_level(10);"
get_xp_to_next_level;function;app\static\js\progression_main_logic.js;app\static\js\progression_main_logic.js;app\static\js\player_ui_logic.js;74;"const xpNext = get_xp_to_next_level(lvl);"
get_xp_to_next_level;function;app\static\js\progression_main_logic.js;app\static\js\progression_main_logic.js;app\static\js\progression_main_logic.js;17;function get_xp_to_next_level(level) {
filterTalentsByLevel;function;app\static\js\progression_main_logic.js;app\static\js\progression_main_logic.js;app\static\js\progression_main_logic.js;29;function filterTalentsByLevel(allTalents, playerLevel) {
onLevelUp;function;app\static\js\progression_main_logic.js;app\static\js\progression_main_logic.js;app\static\js\progression_main_logic.js;40;function onLevelUp(playerLevel, allTalents, callbackNewTalent) {
getMaxVie;function;app\static\js\progression_main_logic.js;app\static\js\progression_main_logic.js;app\static\js\progression_main_logic.js;52;function getMaxVie(level) {
getMaxMana;function;app\static\js\progression_main_logic.js;app\static\js\progression_main_logic.js;app\static\js\progression_main_logic.js;59;function getMaxMana(level) {
getPlayerBaseAtk;function;app\static\js\progression_main_logic.js;app\static\js\progression_main_logic.js;app\static\js\progression_main_logic.js;67;function getPlayerBaseAtk(level) {
getPlayerBaseDef;function;app\static\js\progression_main_logic.js;app\static\js\progression_main_logic.js;app\static\js\progression_main_logic.js;75;function getPlayerBaseDef(level) {
getMonsterPV;function;app\static\js\progression_main_logic.js;app\static\js\progression_main_logic.js;app\static\js\progression_main_logic.js;84;function getMonsterPV(level) {
getMonsterAtk;function;app\static\js\progression_main_logic.js;app\static\js\progression_main_logic.js;app\static\js\progression_main_logic.js;90;function getMonsterAtk(level) {
getMonsterDef;function;app\static\js\progression_main_logic.js;app\static\js\progression_main_logic.js;app\static\js\progression_main_logic.js;96;function getMonsterDef(level) {
getMonsterXP;function;app\static\js\progression_main_logic.js;app\static\js\progression_main_logic.js;app\static\js\progression_main_logic.js;102;function getMonsterXP(level) {
getMonsterXP;function;app\static\js\progression_main_logic.js;app\static\js\progression_main_logic.js;app\static\js\progression_main_logic.js;110;"return getMonsterXP(lvl);"
calculerXPMonstre;function;app\static\js\progression_main_logic.js;app\static\js\progression_main_logic.js;app\static\js\progression_main_logic.js;108;function calculerXPMonstre(monstre) {
save_player_state;function;app\static\js\save_manager_logic.js;app\static\js\save_manager_logic.js;app\static\js\save_manager_logic.js;21;function save_player_state() {
initConnexion;function;app\static\js\utils_main_logic.js;app\static\js\utils_main_logic.js;app\static\js\utils_main_logic.js;10;function initConnexion() {
afficherMessage;function;app\static\js\utils_main_logic.js;app\static\js\utils_main_logic.js;app\static\js\player_talents_logic.js;207;"afficherMessage(""Vous √™tes furtif pendant "" + (dureeFurtivite/1000) + ""s"", ""success"");"
afficherMessage;function;app\static\js\utils_main_logic.js;app\static\js\utils_main_logic.js;app\static\js\player_talents_logic.js;220;"afficherMessage(""La furtivit√© est termin√©e !"", ""error"");"
afficherMessage;function;app\static\js\utils_main_logic.js;app\static\js\utils_main_logic.js;app\static\js\player_talents_logic.js;225;"afficherMessage(""Dash furtif impossible : aucune case libre pour s'√©loigner !"", ""error"");"
afficherMessage;function;app\static\js\utils_main_logic.js;app\static\js\utils_main_logic.js;app\static\js\utils_main_logic.js;25;"afficherMessage(result.message, response.ok ? 'success' : 'error');"
afficherMessage;function;app\static\js\utils_main_logic.js;app\static\js\utils_main_logic.js;app\static\js\utils_main_logic.js;51;"afficherMessage(result.message, response.ok ? 'success' : 'error');"
afficherMessage;function;app\static\js\utils_main_logic.js;app\static\js\utils_main_logic.js;app\static\js\utils_main_logic.js;63;function afficherMessage(message, type = 'info') {
initSmokeAnimation;function;app\static\js\utils_main_logic.js;app\static\js\utils_main_logic.js;app\static\js\utils_main_logic.js;80;function initSmokeAnimation() {
animateSmokeOpacity;function;app\static\js\utils_main_logic.js;;app\static\js\utils_main_logic.js;84;function animateSmokeOpacity() {
animateSmokeOpacity;function;app\static\js\utils_main_logic.js;;app\static\js\utils_main_logic.js;95;"animateSmokeOpacity();"
initParticles;function;app\static\js\utils_main_logic.js;app\static\js\utils_main_logic.js;app\static\js\utils_main_logic.js;104;function initParticles() {
